// automatically generated by the FlatBuffers compiler, do not modify

package goums.terminal;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
/**
 * AccessResult  result
 */
public final class AccessResult extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static AccessResult getRootAsAccessResult(ByteBuffer _bb) { return getRootAsAccessResult(_bb, new AccessResult()); }
  public static AccessResult getRootAsAccessResult(ByteBuffer _bb, AccessResult obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public AccessResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public goums.terminal.AccessProfile Me() { return Me(new goums.terminal.AccessProfile()); }
  public goums.terminal.AccessProfile Me(goums.terminal.AccessProfile obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public String Token() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer TokenAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer TokenInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createAccessResult(FlatBufferBuilder builder,
      int MeOffset,
      int TokenOffset) {
    builder.startTable(2);
    AccessResult.addToken(builder, TokenOffset);
    AccessResult.addMe(builder, MeOffset);
    return AccessResult.endAccessResult(builder);
  }

  public static void startAccessResult(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addMe(FlatBufferBuilder builder, int MeOffset) { builder.addOffset(0, MeOffset, 0); }
  public static void addToken(FlatBufferBuilder builder, int TokenOffset) { builder.addOffset(1, TokenOffset, 0); }
  public static int endAccessResult(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public AccessResult get(int j) { return get(new AccessResult(), j); }
    public AccessResult get(AccessResult obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

