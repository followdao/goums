// automatically generated by the FlatBuffers compiler, do not modify

package goums.terminal;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
/**
 * TerminalProfile
 */
public final class TerminalProfile extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static TerminalProfile getRootAsTerminalProfile(ByteBuffer _bb) { return getRootAsTerminalProfile(_bb, new TerminalProfile()); }
  public static TerminalProfile getRootAsTerminalProfile(ByteBuffer _bb, TerminalProfile obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TerminalProfile __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long userID() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateUserID(long userID) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, userID); return true; } else { return false; } }
  public boolean activeStatus() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean mutateActiveStatus(boolean activeStatus) { int o = __offset(6); if (o != 0) { bb.put(o + bb_pos, (byte)(activeStatus ? 1 : 0)); return true; } else { return false; } }
  public long activeDate() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateActiveDate(long activeDate) { int o = __offset(8); if (o != 0) { bb.putLong(o + bb_pos, activeDate); return true; } else { return false; } }
  public long maxActiveSession() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateMaxActiveSession(long maxActiveSession) { int o = __offset(10); if (o != 0) { bb.putLong(o + bb_pos, maxActiveSession); return true; } else { return false; } }
  public int serviceStatus() { int o = __offset(12); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean mutateServiceStatus(int serviceStatus) { int o = __offset(12); if (o != 0) { bb.putInt(o + bb_pos, serviceStatus); return true; } else { return false; } }
  public long serviceExpiration() { int o = __offset(14); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateServiceExpiration(long serviceExpiration) { int o = __offset(14); if (o != 0) { bb.putLong(o + bb_pos, serviceExpiration); return true; } else { return false; } }
  public String serialNumber() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer serialNumberAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer serialNumberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  public String activeCode() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer activeCodeAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer activeCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  public String accessRole() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer accessRoleAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer accessRoleInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  public int operation() { int o = __offset(22); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean mutateOperation(int operation) { int o = __offset(22); if (o != 0) { bb.putInt(o + bb_pos, operation); return true; } else { return false; } }

  public static int createTerminalProfile(FlatBufferBuilder builder,
      long userID,
      boolean activeStatus,
      long activeDate,
      long maxActiveSession,
      int serviceStatus,
      long serviceExpiration,
      int serialNumberOffset,
      int activeCodeOffset,
      int accessRoleOffset,
      int operation) {
    builder.startTable(10);
    TerminalProfile.addServiceExpiration(builder, serviceExpiration);
    TerminalProfile.addMaxActiveSession(builder, maxActiveSession);
    TerminalProfile.addActiveDate(builder, activeDate);
    TerminalProfile.addUserID(builder, userID);
    TerminalProfile.addOperation(builder, operation);
    TerminalProfile.addAccessRole(builder, accessRoleOffset);
    TerminalProfile.addActiveCode(builder, activeCodeOffset);
    TerminalProfile.addSerialNumber(builder, serialNumberOffset);
    TerminalProfile.addServiceStatus(builder, serviceStatus);
    TerminalProfile.addActiveStatus(builder, activeStatus);
    return TerminalProfile.endTerminalProfile(builder);
  }

  public static void startTerminalProfile(FlatBufferBuilder builder) { builder.startTable(10); }
  public static void addUserID(FlatBufferBuilder builder, long userID) { builder.addLong(0, userID, 0L); }
  public static void addActiveStatus(FlatBufferBuilder builder, boolean activeStatus) { builder.addBoolean(1, activeStatus, false); }
  public static void addActiveDate(FlatBufferBuilder builder, long activeDate) { builder.addLong(2, activeDate, 0L); }
  public static void addMaxActiveSession(FlatBufferBuilder builder, long maxActiveSession) { builder.addLong(3, maxActiveSession, 0L); }
  public static void addServiceStatus(FlatBufferBuilder builder, int serviceStatus) { builder.addInt(4, serviceStatus, 0); }
  public static void addServiceExpiration(FlatBufferBuilder builder, long serviceExpiration) { builder.addLong(5, serviceExpiration, 0L); }
  public static void addSerialNumber(FlatBufferBuilder builder, int serialNumberOffset) { builder.addOffset(6, serialNumberOffset, 0); }
  public static void addActiveCode(FlatBufferBuilder builder, int activeCodeOffset) { builder.addOffset(7, activeCodeOffset, 0); }
  public static void addAccessRole(FlatBufferBuilder builder, int accessRoleOffset) { builder.addOffset(8, accessRoleOffset, 0); }
  public static void addOperation(FlatBufferBuilder builder, int operation) { builder.addInt(9, operation, 0); }
  public static int endTerminalProfile(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TerminalProfile get(int j) { return get(new TerminalProfile(), j); }
    public TerminalProfile get(TerminalProfile obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

