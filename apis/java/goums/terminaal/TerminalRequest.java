// automatically generated by the FlatBuffers compiler, do not modify

package goums.terminal;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
/**
 *  request from tv box
 */
public final class TerminalRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static TerminalRequest getRootAsTerminalRequest(ByteBuffer _bb) { return getRootAsTerminalRequest(_bb, new TerminalRequest()); }
  public static TerminalRequest getRootAsTerminalRequest(ByteBuffer _bb, TerminalRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TerminalRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long userID() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateUserID(long userID) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, userID); return true; } else { return false; } }
  public String serialNumber() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer serialNumberAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer serialNumberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String activeCode() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer activeCodeAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer activeCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String apkType() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer apkTypeAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer apkTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public int operation() { int o = __offset(12); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean mutateOperation(int operation) { int o = __offset(12); if (o != 0) { bb.putInt(o + bb_pos, operation); return true; } else { return false; } }

  public static int createTerminalRequest(FlatBufferBuilder builder,
      long userID,
      int serialNumberOffset,
      int activeCodeOffset,
      int apkTypeOffset,
      int operation) {
    builder.startTable(5);
    TerminalRequest.addUserID(builder, userID);
    TerminalRequest.addOperation(builder, operation);
    TerminalRequest.addApkType(builder, apkTypeOffset);
    TerminalRequest.addActiveCode(builder, activeCodeOffset);
    TerminalRequest.addSerialNumber(builder, serialNumberOffset);
    return TerminalRequest.endTerminalRequest(builder);
  }

  public static void startTerminalRequest(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addUserID(FlatBufferBuilder builder, long userID) { builder.addLong(0, userID, 0L); }
  public static void addSerialNumber(FlatBufferBuilder builder, int serialNumberOffset) { builder.addOffset(1, serialNumberOffset, 0); }
  public static void addActiveCode(FlatBufferBuilder builder, int activeCodeOffset) { builder.addOffset(2, activeCodeOffset, 0); }
  public static void addApkType(FlatBufferBuilder builder, int apkTypeOffset) { builder.addOffset(3, apkTypeOffset, 0); }
  public static void addOperation(FlatBufferBuilder builder, int operation) { builder.addInt(4, operation, 0); }
  public static int endTerminalRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TerminalRequest get(int j) { return get(new TerminalRequest(), j); }
    public TerminalRequest get(TerminalRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

