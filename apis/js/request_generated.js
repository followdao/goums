// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var goums = goums || {};

/**
 * @const
 * @namespace
 */
goums.terminal = goums.terminal || {};

/**
 * @enum {number}
 */
goums.terminal.OperationType = {
  UnDefine: 0,
  active: 1,
  auth: 2
};

/**
 * @enum {string}
 */
goums.terminal.OperationTypeName = {
  '0': 'UnDefine',
  '1': 'active',
  '2': 'auth'
};

/**
 *  request from tv box
 *
 * @constructor
 */
goums.terminal.TerminalRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {goums.terminal.TerminalRequest}
 */
goums.terminal.TerminalRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {goums.terminal.TerminalRequest=} obj
 * @returns {goums.terminal.TerminalRequest}
 */
goums.terminal.TerminalRequest.getRootAsTerminalRequest = function(bb, obj) {
  return (obj || new goums.terminal.TerminalRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {goums.terminal.TerminalRequest=} obj
 * @returns {goums.terminal.TerminalRequest}
 */
goums.terminal.TerminalRequest.getSizePrefixedRootAsTerminalRequest = function(bb, obj) {
  return (obj || new goums.terminal.TerminalRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
goums.terminal.TerminalRequest.prototype.userID = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
goums.terminal.TerminalRequest.prototype.mutate_userID = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
goums.terminal.TerminalRequest.prototype.serialNumber = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
goums.terminal.TerminalRequest.prototype.activeCode = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
goums.terminal.TerminalRequest.prototype.apkType = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {goums.terminal.OperationType}
 */
goums.terminal.TerminalRequest.prototype.operation = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {goums.terminal.OperationType} */ (this.bb.readInt32(this.bb_pos + offset)) : goums.terminal.OperationType.UnDefine;
};

/**
 * @param {goums.terminal.OperationType} value
 * @returns {boolean}
 */
goums.terminal.TerminalRequest.prototype.mutate_operation = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
goums.terminal.TerminalRequest.startTerminalRequest = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} userID
 */
goums.terminal.TerminalRequest.addUserID = function(builder, userID) {
  builder.addFieldInt64(0, userID, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} serialNumberOffset
 */
goums.terminal.TerminalRequest.addSerialNumber = function(builder, serialNumberOffset) {
  builder.addFieldOffset(1, serialNumberOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} activeCodeOffset
 */
goums.terminal.TerminalRequest.addActiveCode = function(builder, activeCodeOffset) {
  builder.addFieldOffset(2, activeCodeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} apkTypeOffset
 */
goums.terminal.TerminalRequest.addApkType = function(builder, apkTypeOffset) {
  builder.addFieldOffset(3, apkTypeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {goums.terminal.OperationType} operation
 */
goums.terminal.TerminalRequest.addOperation = function(builder, operation) {
  builder.addFieldInt32(4, operation, goums.terminal.OperationType.UnDefine);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
goums.terminal.TerminalRequest.endTerminalRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} userID
 * @param {flatbuffers.Offset} serialNumberOffset
 * @param {flatbuffers.Offset} activeCodeOffset
 * @param {flatbuffers.Offset} apkTypeOffset
 * @param {goums.terminal.OperationType} operation
 * @returns {flatbuffers.Offset}
 */
goums.terminal.TerminalRequest.createTerminalRequest = function(builder, userID, serialNumberOffset, activeCodeOffset, apkTypeOffset, operation) {
  goums.terminal.TerminalRequest.startTerminalRequest(builder);
  goums.terminal.TerminalRequest.addUserID(builder, userID);
  goums.terminal.TerminalRequest.addSerialNumber(builder, serialNumberOffset);
  goums.terminal.TerminalRequest.addActiveCode(builder, activeCodeOffset);
  goums.terminal.TerminalRequest.addApkType(builder, apkTypeOffset);
  goums.terminal.TerminalRequest.addOperation(builder, operation);
  return goums.terminal.TerminalRequest.endTerminalRequest(builder);
}

/**
 * Result define sn response
 *
 * @constructor
 */
goums.terminal.Result = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {goums.terminal.Result}
 */
goums.terminal.Result.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {goums.terminal.Result=} obj
 * @returns {goums.terminal.Result}
 */
goums.terminal.Result.getRootAsResult = function(bb, obj) {
  return (obj || new goums.terminal.Result).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {goums.terminal.Result=} obj
 * @returns {goums.terminal.Result}
 */
goums.terminal.Result.getSizePrefixedRootAsResult = function(bb, obj) {
  return (obj || new goums.terminal.Result).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
goums.terminal.Result.prototype.tid = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
goums.terminal.Result.prototype.mutate_tid = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {flatbuffers.Long}
 */
goums.terminal.Result.prototype.code = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
goums.terminal.Result.prototype.mutate_code = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
goums.terminal.Result.prototype.message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
goums.terminal.Result.startResult = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} tid
 */
goums.terminal.Result.addTid = function(builder, tid) {
  builder.addFieldInt64(0, tid, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} code
 */
goums.terminal.Result.addCode = function(builder, code) {
  builder.addFieldInt64(1, code, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
goums.terminal.Result.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(2, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
goums.terminal.Result.endResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} tid
 * @param {flatbuffers.Long} code
 * @param {flatbuffers.Offset} messageOffset
 * @returns {flatbuffers.Offset}
 */
goums.terminal.Result.createResult = function(builder, tid, code, messageOffset) {
  goums.terminal.Result.startResult(builder);
  goums.terminal.Result.addTid(builder, tid);
  goums.terminal.Result.addCode(builder, code);
  goums.terminal.Result.addMessage(builder, messageOffset);
  return goums.terminal.Result.endResult(builder);
}

/**
 * AccessResult  result
 *
 * @constructor
 */
goums.terminal.AccessResult = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {goums.terminal.AccessResult}
 */
goums.terminal.AccessResult.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {goums.terminal.AccessResult=} obj
 * @returns {goums.terminal.AccessResult}
 */
goums.terminal.AccessResult.getRootAsAccessResult = function(bb, obj) {
  return (obj || new goums.terminal.AccessResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {goums.terminal.AccessResult=} obj
 * @returns {goums.terminal.AccessResult}
 */
goums.terminal.AccessResult.getSizePrefixedRootAsAccessResult = function(bb, obj) {
  return (obj || new goums.terminal.AccessResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {goums.terminal.AccessProfile=} obj
 * @returns {goums.terminal.AccessProfile|null}
 */
goums.terminal.AccessResult.prototype.Me = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new goums.terminal.AccessProfile).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
goums.terminal.AccessResult.prototype.Token = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
goums.terminal.AccessResult.startAccessResult = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MeOffset
 */
goums.terminal.AccessResult.addMe = function(builder, MeOffset) {
  builder.addFieldOffset(0, MeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TokenOffset
 */
goums.terminal.AccessResult.addToken = function(builder, TokenOffset) {
  builder.addFieldOffset(1, TokenOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
goums.terminal.AccessResult.endAccessResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MeOffset
 * @param {flatbuffers.Offset} TokenOffset
 * @returns {flatbuffers.Offset}
 */
goums.terminal.AccessResult.createAccessResult = function(builder, MeOffset, TokenOffset) {
  goums.terminal.AccessResult.startAccessResult(builder);
  goums.terminal.AccessResult.addMe(builder, MeOffset);
  goums.terminal.AccessResult.addToken(builder, TokenOffset);
  return goums.terminal.AccessResult.endAccessResult(builder);
}

/**
 * AccessProfile access
 *
 * @constructor
 */
goums.terminal.AccessProfile = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {goums.terminal.AccessProfile}
 */
goums.terminal.AccessProfile.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {goums.terminal.AccessProfile=} obj
 * @returns {goums.terminal.AccessProfile}
 */
goums.terminal.AccessProfile.getRootAsAccessProfile = function(bb, obj) {
  return (obj || new goums.terminal.AccessProfile).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {goums.terminal.AccessProfile=} obj
 * @returns {goums.terminal.AccessProfile}
 */
goums.terminal.AccessProfile.getSizePrefixedRootAsAccessProfile = function(bb, obj) {
  return (obj || new goums.terminal.AccessProfile).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
goums.terminal.AccessProfile.prototype.UserID = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
goums.terminal.AccessProfile.prototype.activeDate = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
goums.terminal.AccessProfile.prototype.Expiration = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
goums.terminal.AccessProfile.startAccessProfile = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} UserIDOffset
 */
goums.terminal.AccessProfile.addUserID = function(builder, UserIDOffset) {
  builder.addFieldOffset(0, UserIDOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} activeDateOffset
 */
goums.terminal.AccessProfile.addActiveDate = function(builder, activeDateOffset) {
  builder.addFieldOffset(1, activeDateOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ExpirationOffset
 */
goums.terminal.AccessProfile.addExpiration = function(builder, ExpirationOffset) {
  builder.addFieldOffset(2, ExpirationOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
goums.terminal.AccessProfile.endAccessProfile = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} UserIDOffset
 * @param {flatbuffers.Offset} activeDateOffset
 * @param {flatbuffers.Offset} ExpirationOffset
 * @returns {flatbuffers.Offset}
 */
goums.terminal.AccessProfile.createAccessProfile = function(builder, UserIDOffset, activeDateOffset, ExpirationOffset) {
  goums.terminal.AccessProfile.startAccessProfile(builder);
  goums.terminal.AccessProfile.addUserID(builder, UserIDOffset);
  goums.terminal.AccessProfile.addActiveDate(builder, activeDateOffset);
  goums.terminal.AccessProfile.addExpiration(builder, ExpirationOffset);
  return goums.terminal.AccessProfile.endAccessProfile(builder);
};

// Exports for Node.js and RequireJS
this.goums = goums;
