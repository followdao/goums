syntax = "proto3";
package protoums;

/// Result define sn response
message Result {
    int64 tid = 1;
    int64 code = 2;
    string message = 3;
}

/// AccessResult  result
message AccessResult {
    AccessProfile Me = 1;
    string Token = 2;
}

/// AccessProfile access
message AccessProfile {
    string UserID = 1;
    string activeDate = 2;
    string Expiration = 3;
}

enum ServiceStatusType {
    StDefault = 0;
    active = 1;
    suspend = 2;
    disabled = 3;
    deleted = 4;
}

enum NotifyType {
    NoUnDefine =0;
    insert = 1;
    update = 2;
    delete = 3;
}

enum OperationType {
    OpUnDefine =0;
    OpActive = 1;
    OpAuth = 2;
}

message TerminalList {
    int64 Count = 1;
    repeated TerminalProfile List = 2;
}

/// TerminalProfile
message TerminalProfile {
    int64 userID = 1;
    bool activeStatus = 2;
    int64 activeDate = 3;
    int64 maxActiveSession = 4;
    ServiceStatusType serviceStatus = 5;
    int64 serviceExpiration = 6;
    string serialNumber = 7;
    string activeCode = 8;
    string accessRole = 9;
    NotifyType operation = 10;
}
///  request from tv box
message TerminalRequest {
    int64 userID = 1;
    string serialNumber = 2;
    string activeCode = 3;
    string apkType =4;
    OperationType operation = 5;
}
/// UmsService backend gRPC service
service UmsService {
    rpc Active (TerminalRequest) returns (AccessResult) {
    }
    rpc Import (TerminalList) returns (Result) {
    }
}

